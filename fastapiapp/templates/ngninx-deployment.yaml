apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-nginx
  labels:
    app: nginx
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: nginx
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: nginx
        image: "{{ .Values.images.nginx.repository }}:{{ .Values.images.nginx.tag }}"
        imagePullPolicy: {{ .Values.images.nginx.pullPolicy }}
        ports:
        - containerPort: {{ .Values.services.nginx.port }}
        resources:
          requests:
            cpu: {{ .Values.resources.nginx.requests.cpu }}
            memory: {{ .Values.resources.nginx.requests.memory }}
          limits:
            cpu: {{ .Values.resources.nginx.limits.cpu }}
            memory: {{ .Values.resources.nginx.limits.memory }}
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config
        configMap:
          name: {{ .Release.Name }}-nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-nginx
  labels:
    app: nginx
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
spec:
  type: {{ .Values.services.nginx.type }}
  ports:
  - port: {{ .Values.services.nginx.port }}
    targetPort: {{ .Values.services.nginx.port }}
    {{- if eq .Values.services.nginx.type "NodePort" }}
    nodePort: {{ .Values.services.nginx.nodePort }}
    {{- end }}
  selector:
    app: nginx
    release: {{ .Release.Name }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-nginx-config
  labels:
    app: nginx
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
data:
  nginx.conf: |
    server {
        listen 8080;
        
        location /api/v1/movies {
            proxy_pass http://{{ .Release.Name }}-movie-service:{{ .Values.services.movie_service.port }}/api/v1/movies;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        location /api/v1/casts {
            proxy_pass http://{{ .Release.Name }}-cast-service:{{ .Values.services.cast_service.port }}/api/v1/casts;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
    }
